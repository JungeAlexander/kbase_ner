title: "NER in kbase"
description: "Named entity recognition for documents in kbase using spacy."
vars:
  name: "ner_kbase"
  lang: "en"
  version: "0.0.0"
  pipeline: "en_core_web_md"
  train: "20210320-glue-dir-kbase-dev-sagemaker-ground-truth/train.spacy"
  dev: "20210320-glue-dir-kbase-dev-sagemaker-ground-truth/dev.spacy"
  test: "20210320-glue-dir-kbase-dev-sagemaker-ground-truth/test.spacy"
  # Set your GPU ID, -1 is CPU
  gpu_id: -1

directories: ["assets", "corpus", "configs", "training", "scripts", "packages"]

assets:
  - dest: "assets/${vars.train}"
    description: "Annotated training data, preprocessed and stored in spacy's binary format."
  - dest: "assets/${vars.dev}"
    description: "Annotated development data, preprocessed and stored in spacy's binary format."
  - dest: "assets/${vars.test}"
    description: "Annotated test data, preprocessed and stored in spacy's binary format."

workflows:
  all:
    - download
    - convert
    - create-config
    - train
    - evaluate

commands:
  - name: "download"
    help: "Download the pretrained pipeline"
    script:
      - "python -m spacy download ${vars.pipeline}"

  - name: "convert"
    help: "Convert the data to spaCy's binary format, removing all non-NER annotation."
    script:
      - "python scripts/convert.py ${vars.lang} assets/${vars.train} corpus/train.spacy"
      - "python scripts/convert.py ${vars.lang} assets/${vars.dev} corpus/dev.spacy"
      - "python scripts/convert.py ${vars.lang} assets/${vars.test} corpus/test.spacy"
    deps:
      - "assets/${vars.train}"
      - "assets/${vars.dev}"
      - "assets/${vars.test}"
      - "scripts/convert.py"
    outputs:
      - "corpus/train.spacy"
      - "corpus/dev.spacy"
      - "corpus/test.spacy"

  - name: "create-config"
    help: "Create a config for updating only NER from an existing pipeline"
    script:
      - "python scripts/create_config.py ${vars.pipeline} ner configs/config.cfg corpus/train.spacy corpus/dev.spacy"
    deps:
      - "scripts/create_config.py"
    outputs:
      - "configs/config.cfg"

  - name: "train"
    help: "Update the NER model"
    script:
      - "python -m spacy train configs/config.cfg --output training/ --paths.train corpus/train.spacy --paths.dev corpus/dev.spacy --training.eval_frequency 10 --training.max_steps 3000 --gpu-id ${vars.gpu_id}"
    deps:
      - "configs/config.cfg"
      - "corpus/train.spacy"
      - "corpus/dev.spacy"
    outputs:
      - "training/model-best"

  - name: "evaluate"
    help: "Evaluate the model and export metrics"
    script:
      - "python -m spacy evaluate training/model-best corpus/dev.spacy --output training/metrics.json"
    deps:
      - "corpus/dev.spacy"
      - "training/model-best"
    outputs:
      - "training/metrics.json"

  - name: package
    help: "Package the trained model as a pip package"
    script:
      - "python -m spacy package training/model-best packages --name ${vars.name} --version ${vars.version} --force"
    deps:
      - "training/model-best"
    outputs_no_cache:
      - "packages/${vars.lang}_${vars.name}-${vars.version}/dist/${vars.lang}_${vars.name}-${vars.version}.tar.gz"

  - name: visualize-model
    help: Visualize the model's output interactively using Streamlit
    script:
      - "streamlit run scripts/visualize_model.py training/model-best \"Python is great and so are pytest and spacy. Guido van Rossum created Python. However, he did not write the book Programming Python.\""
    deps:
      - "scripts/visualize_model.py"
      - "training/model-best"